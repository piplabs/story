syntax = "proto3";
package story.evmstaking.v1.types;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "story/evmstaking/v1/types/params.proto";
import "story/evmstaking/v1/types/evmstaking.proto";

option go_package = "github.com/piplabs/story/client/x/evmstaking/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/params";
  }

  // GetWithdrawalQueue queries the withdrawal queue of the module.
  rpc GetWithdrawalQueue(QueryGetWithdrawalQueueRequest) returns (QueryGetWithdrawalQueueResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/withdrawal_queue";
  }

  // GetRewardWithdrawalQueue queries the reward withdrawal queue of the module.
  rpc GetRewardWithdrawalQueue(QueryGetRewardWithdrawalQueueRequest) returns (QueryGetRewardWithdrawalQueueResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/reward_withdrawal_queue";
  }

  // GetOperatorAddress queries the operator address of a delegator.
  rpc GetOperatorAddress(QueryGetOperatorAddressRequest) returns (QueryGetOperatorAddressResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/operator_address";
  }

  // GetWithdrawalAddress queries the withdrawal address of a delegator.
  rpc GetWithdrawAddress(QueryGetWithdrawAddressRequest) returns (QueryGetWithdrawAddressResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/withdraw_address";
  }

  // GetRewardAddress queries the reward address of a delegator.
  rpc GetRewardAddress(QueryGetRewardAddressRequest) returns (QueryGetRewardAddressResponse) {
    option (google.api.http).get = "/client/evmstaking/v1/reward_address";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryGetWithdrawalQueueRequest is the request type for the Query/WithdrawalQueue RPC method.
message QueryGetWithdrawalQueueRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryGetWithdrawalQueueResponse is the response type for the Query/WithdrawalQueue RPC method.
message QueryGetWithdrawalQueueResponse {
  repeated Withdrawal withdrawals = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGetRewardWithdrawalQueueRequest is the request type for the Query/RewardWithdrawalQueue RPC method.
message QueryGetRewardWithdrawalQueueRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryGetRewardWithdrawalQueueResponse is the response type for the Query/RewardWithdrawalQueue RPC method.
message QueryGetRewardWithdrawalQueueResponse {
  repeated Withdrawal withdrawals = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGetOperatorAddressRequest is the request type for the Query/OperatorAddress RPC method.
message QueryGetOperatorAddressRequest {
  string address = 1;
}

// QueryGetOperatorAddressResponse is the response type for the Query/OperatorAddress RPC method.
message QueryGetOperatorAddressResponse {
  string operator_address = 1;
}

// QueryGetWithdrawAddressRequest is the request type for the Query/WithdrawAddress RPC method.
message QueryGetWithdrawAddressRequest {
  string address = 1;
}

// QueryGetWithdrawAddressResponse is the response type for the Query/WithdrawAddress RPC method.
message QueryGetWithdrawAddressResponse {
  string withdraw_address = 1;
}

// QueryGetRewardAddressRequest is the request type for the Query/RewardAddress RPC method.
message QueryGetRewardAddressRequest {
  string address = 1;
}

// QueryGetRewardAddressResponse is the response type for the Query/RewardAddress RPC method.
message QueryGetRewardAddressResponse {
  string reward_address = 1;
}
