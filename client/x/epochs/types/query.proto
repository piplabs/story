syntax = "proto3";
package client.x.epochs.types;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "client/x/epochs/types/genesis.proto";

option go_package = "client/x/epochs/types";

// Query defines the gRPC querier service.
service Query {
  // GetEpochInfos provide running epochInfos
  rpc GetEpochInfos(GetEpochInfosRequest) returns (GetEpochInfosResponse) {
    option (google.api.http).get = "/client/epochs/v1/epochs";
  }
  // GetEpochInfo provide epochInfo of specified identifier
  rpc GetEpochInfo(GetEpochInfoRequest) returns (GetEpochInfoResponse) {
    option (google.api.http).get = "/client/epochs/v1/epoch";
  }
}

message GetEpochInfosRequest {}
message GetEpochInfosResponse {
  repeated EpochInfo epochs = 1 [(gogoproto.nullable) = false];
}

message GetEpochInfoRequest {
  string identifier = 1;
}
message GetEpochInfoResponse {
  EpochInfo epoch = 1 [(gogoproto.nullable) = false];
}